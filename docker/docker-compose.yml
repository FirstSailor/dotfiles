version: '3'

networks:
  backend:
    driver: bridge

volumes:
  workspace:
    driver: local
  mysql:
    driver: local
  elasticsearch:
    driver: local
  redis:
    driver: local
  redisurl:
    driver: local
  mercure:
    driver: local

services:

  workspace:
    image: rokasm/workspace:73-vpod
    #    image: rokasm/workspace:71
    #    build:
    #      context: ./.docker-conf/main
    #      args:
    #        - PHP_VERSION=7.1
    container_name: workspace
    ports:
      - "8000-8005:8000-8005"
    volumes:
      - ./:/var/www
      - ./.docker/data/workspace/shared:/home/laradock/shared
      - $SSH_AUTH_SOCK:/ssh-agent # Forward local machine SSH key to docker
    expose:
      - "8000-8005"
    tty: true
    networks:
      - backend
    environment:
      SSH_AUTH_SOCK: /ssh-agent

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - backend

  mysql:
    image: mysql:5
    ports:
      - 13306:3306
    volumes:
      - ./.docker/data/mysql:/var/lib/mysql
      - ./.docker-conf/mysql:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      TZ: 'Europe/Vilnius'
    networks:
      - backend

  #  kibana:
  #    image: kibana
  #    ports:
  #      - 5601:5601
  #    networks:
  #      - backend

  elasticsearch:
    image: elasticsearch:5-alpine
    ports:
      - 19200:9200
      - 19300:9300
    volumes:
      - ./.docker/data/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - VIRTUAL_HOST=elasticsearch.dev
      - VIRTUAL_PORT=9200
    networks:
      - backend

      #  redis:
      #    image: redis:4
      #    volumes:
      #      - ./.docker/data/redis:/data
      #    command: redis-server --requirepass password
      #    networks:
      #      - backend

      #  redisurl:
      #    build:
      #      context: ./.docker-conf/main/redis
      #    volumes:
      #      - ./.docker/data/redis-url:/data
      #    networks:
      #      - backend
      #
      #  rabbitmq:
      #    image: rabbitmq:management
      #    hostname: rabbit
      #    ports:
      #      - 5672:5672
      #      - 15672:15672
      #    environment:
      #      - RABBITMQ_DEFAULT_USER=project
      #      - RABBITMQ_DEFAULT_PASS=project
      #    networks:
      #      - backend

      #  selenium:
      #    image: selenium/standalone-chrome:3.141.59-fluorine
      #    ports:
      #      - 4444:4444
      #    volumes:
      #      - /dev/shm:/dev/shm
      #    networks:
      #      - backend

      #  mercure:
      # In production, you may want to use the managed version of Mercure, https://mercure.rocks
      #    image: dunglas/mercure
      #    volumes:
      #      - ./.docker/mercure:/db
      #    environment:
      # You should definitely change all these values in production
#      - DB_PATH=/db/updates.db
#      - JWT_KEY=!ChangeMe!
#      - ALLOW_ANONYMOUS=1
#      - CORS_ALLOWED_ORIGINS=*
#      - PUBLISH_ALLOWED_ORIGINS=http://localhost:1337,https://localhost:1338
#      - DEMO=1
#      - HISTORY_SIZE=1
#      - HISTORY_CLEANUP_FREQUENCY=1
#    ports:
#      - 1337:80
#    networks:
#      - backend
